name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Package Electron App
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            npm run make -- --platform linux
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run make -- --platform mas --arch=x64
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run make -- --platform win32 --arch=x64
          fi

      - name: Upload Release Assets
        uses: actions/upload-artifact@v2
        with:
          name: electron-app-${{ matrix.os }}
          path: out/make/*/*

  create_release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/*/*
          asset_name: electron-app-${{ matrix.os }}
          asset_content_type: application/zip
